name: Github Action for Continuous Integration and Continuous Deployment

on:
  push:
  #pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Build with Gradle
        working-directory: ./
        run: ./gradlew build

      - name: docker login
        env:
          DOCKER_HUB_USER: ${{secrets.DOCKER_HUB_USER}}
          DOCKER_HUB_PASSWORD: ${{secrets.DOCKER_HUB_PASSWORD}}
        run: |
          docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD

      - name: Build the Docker image
        working-directory: ./
        run: docker build . --file Dockerfile -t github-actions-poc:development

      - name: Tag Docker image
        run: docker tag github-actions-poc:development aleferod/github-actions-poc:development

      - name: Docker Push
        run: docker push aleferod/github-actions-poc:development

  deploy:
    name: Deploy
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Start minikube
        uses: medyagh/setup-minikube@master

      - name: Deploy to Minikube Cluster
        run: |
          minikube addons enable ingress
          kubectl create namespace github-actions-poc
          kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
          kubectl apply -f ./k8s

      - name: Ingress Host Configuration
        run: |
            sudo echo "192.168.49.2    github-actions-poc.local" | sudo tee -a /etc/hosts

      - name: Wait Container Up
        run: echo "Waiting for Container Up"
      - uses: GuillaumeFalourd/wait-sleep-action@v1
        with:
          time: '20'

      - name: Health Check
        run: curl github-actions-poc.local/hello

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Install newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra

      - name: Make Directory for results
        run: mkdir -p automated-test-results

      - name: Run Automated Test
        run: |
          newman run github-actions-poc.postman_collection.json
          
      - name: Make Directory for results
        run: mkdir -p automated-test-results

      - name: Exporting Automated Test Results
        run: newman run github-actions-poc.postman_collection.json -r htmlextra --reporter-htmlextra-export automated-test-results/automated-test-report.html --reporter-htmlextra-darkTheme  > automated-test-results/automated-test-report.html

      - name: Output the run Details
        uses: actions/upload-artifact@v2
        with:
          name: Automated-Test-Report
          path: automated-test-results



